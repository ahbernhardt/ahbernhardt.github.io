{"ast":null,"code":"import { createApp } from \"vue\";\nimport { createHead } from \"@vueuse/head\";\nimport App from './App.vue';\nconst app = createApp(App);\nconst head = createHead();\napp.use(head);\napp.mount(\"#app\"); // import Vue,{ createApp } from 'vue'\n// import VueMeta from 'vue-meta'\n// import App from './App.vue'\n// Vue.use(VueMeta)\n// createApp(App)\n//     .mount('#app')\n// import { createMetaManager } from 'vue-meta'\n// const app = createApp(App)\n//     .use(createMetaManager()) // add this line\n//\n// app.mount('#app')\n// import { createApp } from 'vue'\n// import App from './App.vue'\n// import { createMetaManager, defaultConfig, resolveOption, useMeta } from 'vue-meta'\n//\n// const decisionMaker5000000 = resolveOption((prevValue, context) => {\n//     const { uid = 0 } = context.vm || {}\n//     if (!prevValue || prevValue < uid) {\n//         return uid\n//     }\n// })\n//\n// const metaManager = createMetaManager({\n//     ...defaultConfig,\n//     esi: {\n//         group: true,\n//         namespaced: true,\n//         attributes: ['src', 'test', 'text']\n//     }\n// }, decisionMaker5000000)\n//\n// useMeta(\n//     {\n//         title:'anh bernhardt',\n//         og: {\n//             something: 'test'\n//         }\n//     },\n//     metaManager\n// )\n//\n// createApp(App).use(metaManager).mount('#app')","map":{"version":3,"names":["createApp","createHead","App","app","head","use","mount"],"sources":["/Users/anhbernhardt/Desktop/ahbernhardt/ahbernhardt.github.io/src/main.js"],"sourcesContent":["import { createApp } from \"vue\"\nimport { createHead } from \"@vueuse/head\"\nimport App from './App.vue'\nconst app = createApp(App)\nconst head = createHead()\n\napp.use(head)\n\napp.mount(\"#app\")\n\n// import Vue,{ createApp } from 'vue'\n// import VueMeta from 'vue-meta'\n// import App from './App.vue'\n// Vue.use(VueMeta)\n// createApp(App)\n//     .mount('#app')\n\n\n// import { createMetaManager } from 'vue-meta'\n// const app = createApp(App)\n//     .use(createMetaManager()) // add this line\n//\n// app.mount('#app')\n\n\n// import { createApp } from 'vue'\n// import App from './App.vue'\n// import { createMetaManager, defaultConfig, resolveOption, useMeta } from 'vue-meta'\n//\n// const decisionMaker5000000 = resolveOption((prevValue, context) => {\n//     const { uid = 0 } = context.vm || {}\n//     if (!prevValue || prevValue < uid) {\n//         return uid\n//     }\n// })\n//\n// const metaManager = createMetaManager({\n//     ...defaultConfig,\n//     esi: {\n//         group: true,\n//         namespaced: true,\n//         attributes: ['src', 'test', 'text']\n//     }\n// }, decisionMaker5000000)\n//\n// useMeta(\n//     {\n//         title:'anh bernhardt',\n//         og: {\n//             something: 'test'\n//         }\n//     },\n//     metaManager\n// )\n//\n// createApp(App).use(metaManager).mount('#app')"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,MAAMC,GAAG,GAAGH,SAAS,CAACE,GAAD,CAArB;AACA,MAAME,IAAI,GAAGH,UAAU,EAAvB;AAEAE,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEAD,GAAG,CAACG,KAAJ,CAAU,MAAV,E,CAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}